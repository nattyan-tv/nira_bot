Genre, ManageServer, ManageUser, Amuse, ServerStatus, General, Reaction, VoiceClient, BotUtility, ChannelTopic, MessageCommand, MemberCommand = range(
    0, 12)

helpContents = {
    "G": {
        Genre: """\
にらBOTへようこそ！
にらBOTの使い方をまとめたヘルプです、ぜひご覧ください！

・使い方
`n!help`

下に表示されるプルダウンから表示したいヘルプジャンル/コンテンツを選択してください。
""",
        1: """\
サーバー管理/便利
サーバーの管理を行ったりするのに使えたり、サーバーに便利な機能などがあります。
""",
        2: """\
ユーザー
ユーザー情報表示など、ユーザーに関する機能があります。
""",
        3: """\
娯楽
ちょっとしたゲームや、娯楽などに関する機能があります。
""",
        4: """\
サーバーステータス
Steam非公式サーバーやMinecraftサーバーのステータスに関する機能があります。
""",
        5: """\
Embed
Embed機能を使ったメッセージを送信することができます。
""",
        6: """\
にらの反応系
「にら」に反応する便乗機能をはじめ、特定の反応を作成するオートリプライのような機能、特定のチャンネルのメッセージをLINEに送信する機能などがあります。
""",
        7: """\
VC系
音楽再生や読み上げなど、VCに関する機能があります。
""",
        8: """\
にらBOT全般
ほかのコマンド種類に属さないような、「その他」みたいな機能があります。
""",
        9: """\
チャンネルトピック
チャンネルトピックに特定の文字列を入れることで発動する機能を確認できます。
""",
        10: """\
メッセージコマンド
メッセージ長押し/右クリックで「アプリ」から選択するコマンドです。
""",
        11: """\
メンバーコマンド
チャンネルの右のメンバー一覧からメンバーを選択して「アプリ」から選択するコマンドです。
"""},

    ManageServer: {
        1: """\
加入/離脱者情報表示
サーバーに誰かが入ってきた際や、サーバーから誰かが離脱した際に、情報（名前/ID/アカウント作成日/付与されていたロール/現在のサーバー人数）を、特定のチャンネルに送信することができます。
例えば、アカウント作成日が明らかに最近で、荒らしぽっかったりするときに判別しやすくなります。

・使い方
`n!ui set [チャンネルID]`
`n!ui del`

・引数
`[チャンネルID]`
情報メッセージを送信するチャンネルのIDです。
チャンネルIDを取得するには、[こちら](https://support.discord.com/hc/ja/articles/206346498-%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC-%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8ID%E3%81%AF%E3%81%A9%E3%81%93%E3%81%A7%E8%A6%8B%E3%81%A4%E3%81%91%E3%82%89%E3%82%8C%E3%82%8B-)をご確認ください。

・例
`n!ui set 123456789`
`n!ui del`
""",
        2: """\
ウェルカムメッセージ送信
サーバーに誰かが入ってきた際や、サーバーから誰かが離脱した際に、特定のメッセージを、特定のチャンネルに送信することができます。
例えば、誰かが入ってきたときにお出迎えするために使ってみてください！

・使い方
`n!welcome [join/leave] [メッセージ本文]`
(エイリアス: `youkoso`,`goodbye`,`ようこそ`,`Welcome`)

・引数
`[join/leave]`
**join**か**leave**を指定してください。
**join**と指定すると、誰かがサーバーに入った際のメッセージ、**leave**と指定すると、誰かがサーバーから離脱した際のメッセージが送信されます。

`[メッセージ本文]`
送信したいメッセージ本文です。
メッセージ内には`%name%`/`%count%`/`%ment%`と入れることで、それぞれ`ユーザー名`/`ユーザー数`/`メンション`に置き換わります。

・例
`n!welcome join %name%さんこんにちは！ %count%人目のお客様です！`
`n!welcome leave %name%さん、またね！`
""",
        3: """\
サーバー加入時 自動ロール付与
サーバーに誰かが入ってきた際に、自動的に指定したロールを付与します。

・使い方
`n!autorole [ロール名またはID]`
(エイリアス: `自動ロール`,`オートロール`)

・引数
`[ロール名またはID]`
付与したいロール名またはIDです。

・例
`n!autorole にら民`
""",
        4: """\
ボタンでロールを付与するパネル
ボタンを押すことでロールを付与/剥奪できるパネルを作成することができるコマンドです。
「ロール部屋」とかってチャンネルを作って、このパネルだけを置いておけば、ロール付与/剥奪が簡単に行えます。
ボタンは最大で25個まで一つのメッセージにくっつけられるので、ロールパネルのロール最大値は25です。
特にバグリやすそうなコマンドな気がするので気を付けてください。（気づいたらボタンが反応しなくなってるとか...）

・使い方
```
n!rolepanel [*タイトル]
[ロール名またはID1]
[ロール名またはID2]
[ロール名またはID3]...
```

・引数
`[*タイトル]`
あってもなくてもかまいません。
特定のメッセージをロールパネルのタイトルにしたい場合は入力してください。
入力する場合は**rolepanel**の後に半角スペースを開けてから入力します。
入力しない倍は、**rolepanel**の後にすぐ改行してからロールを入力していきます。

`[ロール名またはID]`
ボタンを押すことで付与/剥奪するロール名またはIDです。

・例
```
n!rolepanel
猫が好きな人
犬が好きな人
鳥が好きな人
```
""",
        5: """\
荒らし対策機能

未完成です（こんな感じにできたらいいなーって感じのやつです）

20秒間に、指定数以上メッセージを送ったユーザーに特定のロールを付与し、荒らし対策とします。

・使い方
`n!mod on [メッセージ数] [付与するロール名またはID]`
`n!mod off`

・引数
`[メッセージ数]`
1分回の間に、この数を超えるメッセージを送った人にロールを付与します。

`[付与するロール名またはID]`
ミュート用に付与するロールを事前に作成しておき、ここで指定してください。

・例
`n!mod on 30 だまられろ！`
""",
        6: """\
メッセージ下部ピン止め機能

未完成です（こんな感じにできたらいいなーって感じのやつです）

特定のメッセージを、常にチャンネルの一番下(最新メッセージ)においておきます。
チャンネルを見たら、必ず目に入るような位置なので、そのチャンネルでの簡単なルールなどを書いておくといいでしょう。

・使い方
`n!pin on [メッセージ内容]`
`n!pin off`

・引数
`[メッセージ内容]`
下部にピン止めするメッセージの内容です。

・例
`n!pin on このチャンネルは随時ニュースが流れるよ`
""",
        7: """\
サーバーを抜けてもロールを保持する
そのサーバーを抜けても、ロールを保持することで、荒らしが「一回抜けて入りなおして、ロールを外して荒らす」みたいなことを防止できます。
ロールキーパー機能です。

・使い方
`n!rk [on/off]`

・引数
`[on/off]`
機能を有効にするか無効にするか設定できます。

・例
`n!rk on`
""",
        8: """\
Bump通知機能
disboardのBumpが出来る時間(2時間)になったらお知らせしてくれる機能です。

・使い方
`n!bump [on/off]`

・引数
[on/off]
機能を有効にするか無効にするか設定できます。

・例
`n!bump on`
""",
        9: """\
ボタンで投票するパネル
ボタンを押すことで投票することが出来るパネルです。
特にバグリやすそうなコマンドな気がするので気を付けてください。（気づいたらボタンが反応しなくなってるとか...）

・使い方
```
n!pollpanel [on/off] [*タイトル]
[選択肢1]
[選択肢2]
[選択肢3]...
```

・引数
`[on/off]`
onにすると、一人一票になります。

`[*タイトル]`
あってもなくてもかまいません。
特定のメッセージをロールパネルのタイトルにしたい場合は入力してください。

`[選択肢]`
選択肢です。

・例
```
n!pollpanel on 好きなねこ教えてね
しろねこ
くろねこ
みけねこ
```
""",
        10: """\
DissokuのUp通知を行います

もうそのまんまです。
DissokuのUpをしたら、その1時間後に通知します。

・使い方
`n!up [on/off] [*ロール]`
**on**の場合、ロールを後ろにつけると、ロールをメンションします。

・例
`n!up on`
`n!up on @( ᐛ )وｱｯﾊﾟｧｧｧｧｧｧｧｧｧｧｧｧｧｧ!!`
`n!up off`
""",
        11: """\
メッセージに反応してDMを送信します

例えばパスワード入れたら開くような扉でも作りたい方はこちらをご使用ください...

指定された文章を含むメッセージが送信された場合にDMを送信します。

・使い方
`n!mesdm set [反応メッセージ] [送信DM文章]`
`n!mesdm del`
`n!mesdm list`


・引数
`[反応メッセージ]`
実際に反応するメッセージです。
反応メッセージには[正規表現](https://qiita.com/tossh/items/635aea9a529b9deb3038)をご使用いただけます。
反応メッセージにスペースを含みたい場合は、反応メッセージ全体を「""」（ダブルクオーテーション）で囲んでください。

`[送信DM文章]`
実際にDMに送信するメッセージです。

・例
```
n!mesdm set "I want to be ([に|ニ|ni]|[ら|ラ|ra])BOT" お、君もにらBOTになりたいのか！
> 1. そうだよ（便乗）
> 2. ちがうよ（便乗）
||（返事しても何も起きないよ）||```
`n!mesdm del`
`n!mesdm list`
""",
        12: """\
メッセージに反応してロール付与/剥奪を行います。

指定された文章を含むメッセージが送信された場合にロールの付与/剥奪を行います。

・使い方
`n!mesrole set [反応メッセージ] [add/del] [ロール名又はID]`
`n!mesrole del`
`n!mesrole list`

・引数
`[反応メッセージ]`
実際に反応するメッセージです。
反応メッセージには[正規表現](https://qiita.com/tossh/items/635aea9a529b9deb3038)をご使用いただけます。
反応メッセージにスペースを含みたい場合は、反応メッセージ全体を「""」（ダブルクオーテーション）で囲んでください。

`[add/del]`
ロールを付与する場合は`add`、
剥奪する場合は`del`です。

`[ロール名又はID]`
実際に付与/剥奪するロールです。

・例
`n!mesrole set "I don't want to be ([に|ニ|ni]|[ら|ラ|ra])BOT" del にら民`
`n!mesrole del`
`n!mesrole list`
""",
        13: """\
メッセージを下部にピン留めします。

見やすい位置って下だもんね！？

・使い方
`n!pin set [ピン留め文章]`
`n!pin del`

・引数
`[ピン留め文章]`
ピン留めする文章です。

・例
```
n!pin set ほら！ちゃんと自己紹介しなさい！！！
> __テンプレート__
> 名前: nattyan-tv
> 年齢: 永遠の0
> やってるゲーム: twitter
> ひとこと: ねぇよ！！！！```
`n!pin del`
""",
        14: """\
毎日指定時間にメッセージを送ります。

例えば`5:58`/`6:58`/`7:35`:`7:58`に指定すればめざましじゃんけんに遅れずに済みます（土日も通知されるのがキズですが...）

・使い方
`n!remind on [時間(hh:mm)] [送信したいメッセージ文]`
`n!remind off [時間(hh:mm)]`
`n!remind list`

・引数
`[時間(hh:mm)]`
通知する時間です。
`3:34`とすれば`03:34`（早朝3時）、`19:5`とすれば`19:05`という風に、0埋めなどで出来る限り補完します。

`[送信したいメッセージ文]`
送信したいメッセージ文です。

・例
```
n!remind on 6:00 起きるのだ！
さっさと起きないとeveryoneメンションしちゃうのだ！
早く僕の朝食を作るのだ！```
`n!remind off 6:00`
"""},
    ManageUser: {
        1: """\
ユーザー情報表示
自分または特定のユーザーの情報（名前/ID/アカウント作成日）を表示します。

・使い方
`n!d [*ユーザーID]`

・引数
`[*ユーザーID]`
指定しないと、自分の情報を表示します。
ユーザーIDを取得するには、[こちら](https://support.discord.com/hc/ja/articles/206346498-%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC-%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8ID%E3%81%AF%E3%81%A9%E3%81%93%E3%81%A7%E8%A6%8B%E3%81%A4%E3%81%91%E3%82%89%E3%82%8C%E3%82%8B-)をご確認ください。

・例
`n!d`
""",
        2: """\
管理者権限の有無をチェック
あなたにサーバーの管理者権限（にらBOTの大体の操作権）があるかをチェックします。

・使い方
`n!admin`

・例
`n!admin`
""",
        3: """\
招待リンクに名前を付けて管理する
招待リンクに名前を付けます。
この名前はにらBOT内のみで管理されます。
この機能は単体ではあんま強みがないですが、`サーバー便利/管理`の`加入/離脱者情報表示`を使用すると、どの招待リンクを使って来たかが分かりやすくなると思います。

・使い方
`n!invite set [招待リンクまたはコード] [つけたい名前]`
`n!invite del [招待リンクまたはコード]`
`n!invite`（リスト表示）

サーバー参加者がどのURLを使用したかは、頑張って検知するようにしますが、場合によっては検知出来ない場合があります。その場合は優しく見守ってください。

・引数
`[招待リンクまたはコード]`
招待リンクまたはコードです。
`https://discord.gg/aBcD1234`のような形または`aBcD1234`のような形です。

`[つけたい名前]`
つけたい名前です。

・例
`n!invite set awfFpCYTcP メイン`
`n!invite del awfFpCYTcP`
`n!invite list`
"""},
    Amuse: {
        1: """\
サイコロ
サイコロを振ります。

・使い方
`n!dice [サイコロの最大値]`

・引数
`[サイコロの最大値]`
サイコロの最大値を指定します。
サイコロは0からこの値までの中でランダムな数を表示します。
なお、数値以外(マイナスなど)を指定しても、数値のみが反映されます。

・例
`n!dice 6`
""",
        2: """\
じゃんけん
じゃんけんしましょっか。
なお、心理戦/AI機能などはなく、確率は同様に確からしいです。

・使い方
`n!janken [グー/チョキ/パー]`

・引数
`[グー/チョキ/パー]`
じゃんけんの手を指定します。

・例
`n!janken チョキ`
""",
        3: """\
占い
あなたを占って見せます。
なお、確率は同様に確からしいです。
また、この結果によってあなたの人生が完璧に占われるわけではないので、あくまでも**参考**にしてください。

・使い方
`n!uranai`

・例
`n!uranai`
""",
        4: """\
Wordle風ゲーム
製作者の大好き（得意とは言ってない）なゲーム「Wordle」を模したゲームです。
なお、プログラムはあまり正常ではないので、ご注意ください。
遊び方については[こちら](https://snsdays.com/game-app/wodle-play-strategy/)をご確認ください。

・使い方
`n!wordle`

・例
`n!wordle`
""",
        5: """\
しりとり風ゲーム
コマンドを送ったチャンネルで、しりとり風のゲームを始めます。
しりとり風というのは、送られたメッセージの最後の文字から始まる言葉をただ送り返すだけのもので、重複返しもあります。

・使い方
`n!srtr`

・例
`n!srtr`
"""},
    ServerStatus: {
        1: """\
Steam非公式サーバー ステータスチェック
Steamの非公式サーバー（Dedicated Server）のステータスをチェックすることができる機能です。
ゲームの対応リストは[こちら](https://developer.valvesoftware.com/wiki/Dedicated_Servers_List)をご確認ください。

このコマンドの使い方は別のページにまとめてあります。
[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/ss)をご確認ください。
""",
        2: """\
Minecraftサーバー ステータスチェック

MinecraftのJava版およびBedrock版のサーバーのステータスをチェックすることができる機能です。

このコマンドの使い方は別ページにまとめてあります。
[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/minecraft)をご確認ください。
"""},
    General: {
        1: """\
Embedを送信する
Embedを送信することができます。
Embedとは、コマンドを送信したときにたまに返ってくる、横に色帯がついた、囲われたメッセージのことです。

・使い方
```
n!embed [カラーコード] [タイトル]
[本文]
```

・引数
`[カラーコード]`
EmbedのカラーコードをRGBのHEX形式(先頭の「0x」や「#」は不要)で指定します。
カラーコードについてわからない方は、[こちら](https://bratcreator.work/color-code/)をご確認ください。

`[タイトル]`
Embedのタイトルを指定します。

`[本文]`
Embedの本文を指定します。
""",
        1: """\
メッセージを翻訳する
翻訳の意味が分からない方はどうぞ翻訳してください。

DeepL翻訳及びGoogle翻訳の両方を使用します。
（デフォルトはDeepL翻訳で、DeepL翻訳使用できない場合にGoogle翻訳が使用されます。）

・使い方
`n!translate [ja/en] [翻訳したい文章]`
`/translate`

・引数
`[ja/en]`
`ja`とすれば日本語に、`en`とすれば英語に翻訳されます。

`[翻訳したい文章]`
実際に翻訳したい文章を入力します。

このコマンドはスラッシュコマンドを使うと、より多くの言語が使用出来たり、翻訳元言語の指定が出来たりします。
また、メッセージコマンドを使用して、送信されているメッセージを翻訳することもできます。
さらに、チャンネルトピックを使用して、流れてくるメッセージを翻訳することもできます。

現在、DeepL翻訳なのか、Google翻訳なのかを知りたい場合は`n!translate`とだけ送信すると、下に使用できる翻訳プロバイダが表示されます。

・有効プロバイダの見方
`DeepL Translate`: DeepL翻訳が使用されます。
`DeepL Translate/Google Translate`: DeepL翻訳とGoogle翻訳が使用されます。（DeepL翻訳がエラーを吐いた場合にGoogle翻訳が使用されます。）
`Google Translate`: Google翻訳が使用されます。
`No Provider!`: 現在翻訳機能は使用できません。（管理者に問い合わせた方がいいと思います。）

# 開発者向け
・翻訳プロバイダ切り替え
`n!translate provider`
コマンド送信後、ボタンを押すことで、プロバイダの切り替えを行えます。

Powered by DeepL Translate/Google Translate
"""},
    Reaction: {
        1: """\
にらのコマンド/Bump以外の全反応設定
チャンネルでのにらBOTの便乗機能および、追加反応(オートリプライ)での反応を有効/無効にすることができます。
真面目なチャンネルなどでは設定しておいてください。怒られます。
なお、この設定はチャンネルトピックでも使うことができます。
`n!help`から`チャンネルトピック`->`そのチャンネルでにらの反応を無効化する`からご確認ください。

・使い方
`n!ar [on/off] [*all]`

・引数
`[on/off]`
機能を有効にするか無効にするかを指定します。

`[*all]`
`on/off`の後に半角スペースを空けて`all`と指定すると、そのサーバーでの設定を有効/無効にできます。
サーバー設定で無効になっている場合は、チャンネル設定で有効にしても反応しなくなります。

・例
`n!ar off`
""",
        2: """\
自分で反応を追加するオートリプライ機能
自分で「トリガー」と「リターン」を設定することで、にらBOTを、特定の言葉に反応させることができます。
トリガーには正規表現を使うことができますが、半角スペースを使うことはできません。

・使い方
追加: `n!er add [トリガー] [リターン]`
リスト: `n!er list`
削除: `n!er del [トリガー]`

・引数
`[トリガー]`
反応する言葉を指定します。

`[リターン]`
なんと返信させるかを指定します。

・例
`n!er add bot 呼んだ！？`
""",
        3: """\
特定の言葉に反応する便乗機能
チャンネルでのにらBOTの通常の反応機能の有効/無効設定です。
にらBOTのメイン的な機能です。便乗します。

・使い方
`n!nr [on/off] [*all]`

・引数
`[on/off]`
機能を有効にするか無効にするかを指定します。

`[*all]`
`on/off`の後に半角スペースを空けて`all`と指定すると、そのサーバーでの設定を有効/無効にできます。
サーバー設定で無効になっている場合は、チャンネル設定で有効にしても反応しなくなります。

・例
`n!nr off`
""",
        4: """\
特定のチャンネルのメッセージをLINEに送る
コマンドを送信したチャンネルのメッセージを、LINEに送信することが可能です。
ここで指す**LINE**とは、1対1のチャットおよび、(**オープンチャットを除く**)グループチャットのことです。
**LINE**はLINE株式会社の商標または登録商標です。
事前にLINE Notifyからトークンを発行しておく必要があります。
トークンの発行などについては[こちら](https://qiita.com/nattyan_tv/items/33ac7a7269fe12e49198)をご確認ください。

・使い方
追加: `/line [トークン]`
削除: `/line_del`
(スラッシュコマンドです。)

・引数
`[トークン]`
事前にLINE Notifyからトークンを発行しておく必要があります。
トークンの発行などについては[こちら](https://qiita.com/nattyan_tv/items/33ac7a7269fe12e49198)をご確認ください。
"""},
    VoiceClient: {
        1: """\
VCにBOTを参加させる
音楽再生をする際に、VCにBOTを参加させることができます。
なお、読み上げ機能を使う際は`n!tts join`を使う必要があります。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にもまとめてあります。

・使い方
`n!join`

・例
`n!join`
""",
        2: """\
VCからBOTを離脱させる
音楽再生などが終わった際に、VCからBOTを離脱させることができます。
なお、読み上げから切断する場合は`n!tts leave`を使う必要があります。
また、BOTがバグってしまって、VCに取り残されてる場合にもこのコマンドを使うことができます。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にもまとめてあります。

・使い方
`n!leave [*f]`

・引数
`[*f]`
`＊通常は指定しません。`
BOTを強制的に離脱させたい場合は、`f`を指定してください。

・例
`n!leave`
""",
        3: """\
読み上げ機能
聞き専などで、しゃべりたいけどマイクが使えないみたいなときに、特定のチャンネルでのメッセージを読み上げてくれる機能です。
`Text to speech`の略で`TTS`です。


TTSの読み上げ音声には、VOICEVOXが使われています。
[各キャラクターについて](https://voicevox.hiroshiba.jp/)
キャラクターボイス: `VOICEVOX: 四国めたん`/`VOICEVOX: ずんだもん`/`VOICEVOX: 春日部つむぎ`/`雨晴はう`/`VOICEVOX: 波音リツ`/`VOICEVOX: 玄野武宏`/`VOICEVOX: 白上虎太郎`/`VOICEVOX: 青山龍星`/`VOICEVOX: 冥鳴ひまり`/`VOICEVOX: 九州そら`

また、音声生成には[WEB版VOICEVOX](https://voicevox.su-shiki.com/)のAPIを使用させていただいております。


・使い方
参加: `n!tts join`
声の選択: `n!tts voice`
切断: `n!tts leave`

・例
`n!tts join`
""",
        4: """\
音楽を再生する
音楽再生を開始します。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にまとめてあります。
""",
        5: """\
音楽再生を全部止める
現在再生中の音楽を止め、プレイリストからも全曲を削除して、完璧に停止します。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にまとめてあります。
""",
        6: """\
音楽を一時停止する
音楽再生を一時停止します。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にまとめてあります。
""",
        7: """\
音楽再生を再開する
一時停止した音楽を再開させます。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にまとめてあります。
""",
        8: """\
曲のリスト表示
現在プレイリストに入っている曲数を表示します。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にまとめてあります。
""",
        9: """\
リストの一番後ろを消す
プレイリストの一番最後の曲を削除します。

音楽再生のコマンドについては[こちら](https://sites.google.com/view/nira-bot/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/music)にまとめてあります。
"""},
    BotUtility: {
        1: """\
サーバーとのレイテンシを測る
Discordサーバーとのレイテンシ(RTT)測定及びHTTP_dbへのレイテンシまたは、特定のサーバーとのPing疎通チェックを行います。
Ping疎通チェックでは、localhostやLAN内のアドレスは指定||多分||できません。（しないでください。）

・使い方
`n!ping [*アドレス]`

・引数
`[*アドレス]`
指定すると、Ping疎通チェックを行います。
指定しないと、Discordサーバーとのレイテンシを測定します。

・例
`n!ping`
`n!ping www.google.com`
""",
        2: """\
Webページ作成
HTMLコードを直接送信することで、そのHTMLのページへのURLを送信します。
使用サービスのDynamic-pageについては[こちら](https://github.com/nattyan-tv/dynamic-page)をご確認ください。

・使い方
`n!html [HTMLコード]`

・引数
`[HTMLコード]`
HTMLコードを指定してください。

・例
`n!html <h1>Hello World</h1>`
""",
        3: """\
にらBOTの情報表示
にらBOTの情報を表示するよ！

・使い方
`n!info`

・例
`n!info`
""",
        4: """\
ヘルプ表示
にらBOTのヘルプおよび、各コマンドのヘルプを表示します。

・使い方
`n!help [*コマンド]`

・引数
`[*コマンド]`
指定すると、そのコマンドのヘルプを表示します。
なにも指定せずに`n!help`とだけ送信すると、ヘルプメッセージが送信されます。

・例
`n!help help`
"""},
    ChannelTopic: {
        1: """\
そのチャンネルでにらの反応を無効化する
チャンネルトピックに`nira-off`と入力しておくと、そのチャンネルでのにらBOTの反応を無効化できます。
同様のコマンド`n!ar`があります。
`n!help`から`にらの反応系`->`にらのコマンド/Bump以外の全反応設定`と選択してください。
""",
        2: """\
そのチャンネルのメッセージを翻訳する
チャンネルトピックに入力すると、そのチャンネルでのメッセージが自動で翻訳される機能です。

`nira-tl-ja`: すべてのメッセージを日本語に翻訳する
`nira-tl-en`: すべてのメッセージを英語に翻訳する
`nira-tl-auto`: すべてのメッセージを「日本語は英語に」「英語は日本語に」翻訳する

詳しい情報は`n!help translate`でご確認ください。
"""},
    MessageCommand: {
        1: """\
Embed取得
Embedの中身をメッセージに書き起こし、他者から見えないように送信します。

・対象メッセージ
Embedが含まれているメッセージ
""",
        2: """\
メッセージ翻訳
選択されたメッセージを翻訳します。言語は自動解析されます。

・対象メッセージ
テキストが含まれているメッセージ

翻訳は`n!translate`でも使用可能です。(`n!help translate`)
""",
        3: """\
メッセージ読み上げ
選択されたメッセージを読み上げます。事前にVCに参加している必要があります。

・対象メッセージ
テキストが含まれているメッセージ

テキスト読み上げは`n!tts`でも使用可能です。(`n!help tts`)
""",
        4: """\
ロールパネル編集
作成されたロールパネルを編集することができます。

・対象メッセージ
にらBOTが送信した`n!rolepanel`または`/rolepanel`で生成したロールパネル

ロールパネルは`n!rolepanel`で生成可能です。(`n!help rolepanel`)
""",
        5: """\
下部ピン留めする
選択されたメッセージを、下部ピン留めとして登録します。

・対象メッセージ
テキストが含まれているメッセージ

下部ピン留めは`n!pin`でも使用可能です。(`n!help pin`)
"""
    },
    MemberCommand: {
        1: """\
ユーザー情報表示
選択されたユーザーの情報を表示します。
`n!d`の省略版です。
""",
        2: """\
管理者権限チェック
選択されたユーザーがにらBOTの管理権限を有しているかを表示します。
`n!admin`の他人にも使える版です。
""",
    }
}
